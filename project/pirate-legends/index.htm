<!DOCTYPE html>
<html lang="en-AU"><head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<meta name="robots" content="max-image-preview:large">
	<style>img:is([sizes="auto" i], [sizes^="auto," i]) { contain-intrinsic-size: 3000px 1500px }</style>
	<link rel="dns-prefetch" href="//cdnjs.cloudflare.com">
<script type="text/javascript">
/* <![CDATA[ */
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.0.3\/svg\/","svgExt":".svg","source":{"wpemoji":"http:\/\/localhost\/samuelPortfolioProj\/wp-includes\/js\/wp-emoji.js?ver=6.7.2","twemoji":"http:\/\/localhost\/samuelPortfolioProj\/wp-includes\/js\/twemoji.js?ver=6.7.2"}};
/**
 * @output wp-includes/js/wp-emoji-loader.js
 */

/**
 * Emoji Settings as exported in PHP via _print_emoji_detection_script().
 * @typedef WPEmojiSettings
 * @type {object}
 * @property {?object} source
 * @property {?string} source.concatemoji
 * @property {?string} source.twemoji
 * @property {?string} source.wpemoji
 * @property {?boolean} DOMReady
 * @property {?Function} readyCallback
 */

/**
 * Support tests.
 * @typedef SupportTests
 * @type {object}
 * @property {?boolean} flag
 * @property {?boolean} emoji
 */

/**
 * IIFE to detect emoji support and load Twemoji if needed.
 *
 * @param {Window} window
 * @param {Document} document
 * @param {WPEmojiSettings} settings
 */
( function wpEmojiLoader( window, document, settings ) {
	if ( typeof Promise === 'undefined' ) {
		return;
	}

	var sessionStorageKey = 'wpEmojiSettingsSupports';
	var tests = [ 'flag', 'emoji' ];

	/**
	 * Checks whether the browser supports offloading to a Worker.
	 *
	 * @since 6.3.0
	 *
	 * @private
	 *
	 * @returns {boolean}
	 */
	function supportsWorkerOffloading() {
		return (
			typeof Worker !== 'undefined' &&
			typeof OffscreenCanvas !== 'undefined' &&
			typeof URL !== 'undefined' &&
			URL.createObjectURL &&
			typeof Blob !== 'undefined'
		);
	}

	/**
	 * @typedef SessionSupportTests
	 * @type {object}
	 * @property {number} timestamp
	 * @property {SupportTests} supportTests
	 */

	/**
	 * Get support tests from session.
	 *
	 * @since 6.3.0
	 *
	 * @private
	 *
	 * @returns {?SupportTests} Support tests, or null if not set or older than 1 week.
	 */
	function getSessionSupportTests() {
		try {
			/** @type {SessionSupportTests} */
			var item = JSON.parse(
				sessionStorage.getItem( sessionStorageKey )
			);
			if (
				typeof item === 'object' &&
				typeof item.timestamp === 'number' &&
				new Date().valueOf() < item.timestamp + 604800 && // Note: Number is a week in seconds.
				typeof item.supportTests === 'object'
			) {
				return item.supportTests;
			}
		} catch ( e ) {}
		return null;
	}

	/**
	 * Persist the supports in session storage.
	 *
	 * @since 6.3.0
	 *
	 * @private
	 *
	 * @param {SupportTests} supportTests Support tests.
	 */
	function setSessionSupportTests( supportTests ) {
		try {
			/** @type {SessionSupportTests} */
			var item = {
				supportTests: supportTests,
				timestamp: new Date().valueOf()
			};

			sessionStorage.setItem(
				sessionStorageKey,
				JSON.stringify( item )
			);
		} catch ( e ) {}
	}

	/**
	 * Checks if two sets of Emoji characters render the same visually.
	 *
	 * This function may be serialized to run in a Worker. Therefore, it cannot refer to variables from the containing
	 * scope. Everything must be passed by parameters.
	 *
	 * @since 4.9.0
	 *
	 * @private
	 *
	 * @param {CanvasRenderingContext2D} context 2D Context.
	 * @param {string} set1 Set of Emoji to test.
	 * @param {string} set2 Set of Emoji to test.
	 *
	 * @return {boolean} True if the two sets render the same.
	 */
	function emojiSetsRenderIdentically( context, set1, set2 ) {
		// Cleanup from previous test.
		context.clearRect( 0, 0, context.canvas.width, context.canvas.height );
		context.fillText( set1, 0, 0 );
		var rendered1 = new Uint32Array(
			context.getImageData(
				0,
				0,
				context.canvas.width,
				context.canvas.height
			).data
		);

		// Cleanup from previous test.
		context.clearRect( 0, 0, context.canvas.width, context.canvas.height );
		context.fillText( set2, 0, 0 );
		var rendered2 = new Uint32Array(
			context.getImageData(
				0,
				0,
				context.canvas.width,
				context.canvas.height
			).data
		);

		return rendered1.every( function ( rendered2Data, index ) {
			return rendered2Data === rendered2[ index ];
		} );
	}

	/**
	 * Determines if the browser properly renders Emoji that Twemoji can supplement.
	 *
	 * This function may be serialized to run in a Worker. Therefore, it cannot refer to variables from the containing
	 * scope. Everything must be passed by parameters.
	 *
	 * @since 4.2.0
	 *
	 * @private
	 *
	 * @param {CanvasRenderingContext2D} context 2D Context.
	 * @param {string} type Whether to test for support of "flag" or "emoji".
	 * @param {Function} emojiSetsRenderIdentically Reference to emojiSetsRenderIdentically function, needed due to minification.
	 *
	 * @return {boolean} True if the browser can render emoji, false if it cannot.
	 */
	function browserSupportsEmoji( context, type, emojiSetsRenderIdentically ) {
		var isIdentical;

		switch ( type ) {
			case 'flag':
				/*
				 * Test for Transgender flag compatibility. Added in Unicode 13.
				 *
				 * To test for support, we try to render it, and compare the rendering to how it would look if
				 * the browser doesn't render it correctly (white flag emoji + transgender symbol).
				 */
				isIdentical = emojiSetsRenderIdentically(
					context,
					'\uD83C\uDFF3\uFE0F\u200D\u26A7\uFE0F', // as a zero-width joiner sequence
					'\uD83C\uDFF3\uFE0F\u200B\u26A7\uFE0F' // separated by a zero-width space
				);

				if ( isIdentical ) {
					return false;
				}

				/*
				 * Test for UN flag compatibility. This is the least supported of the letter locale flags,
				 * so gives us an easy test for full support.
				 *
				 * To test for support, we try to render it, and compare the rendering to how it would look if
				 * the browser doesn't render it correctly ([U] + [N]).
				 */
				isIdentical = emojiSetsRenderIdentically(
					context,
					'\uD83C\uDDFA\uD83C\uDDF3', // as the sequence of two code points
					'\uD83C\uDDFA\u200B\uD83C\uDDF3' // as the two code points separated by a zero-width space
				);

				if ( isIdentical ) {
					return false;
				}

				/*
				 * Test for English flag compatibility. England is a country in the United Kingdom, it
				 * does not have a two letter locale code but rather a five letter sub-division code.
				 *
				 * To test for support, we try to render it, and compare the rendering to how it would look if
				 * the browser doesn't render it correctly (black flag emoji + [G] + [B] + [E] + [N] + [G]).
				 */
				isIdentical = emojiSetsRenderIdentically(
					context,
					// as the flag sequence
					'\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67\uDB40\uDC7F',
					// with each code point separated by a zero-width space
					'\uD83C\uDFF4\u200B\uDB40\uDC67\u200B\uDB40\uDC62\u200B\uDB40\uDC65\u200B\uDB40\uDC6E\u200B\uDB40\uDC67\u200B\uDB40\uDC7F'
				);

				return ! isIdentical;
			case 'emoji':
				/*
				 * Four and twenty blackbirds baked in a pie.
				 *
				 * To test for Emoji 15.0 support, try to render a new emoji: Blackbird.
				 *
				 * The Blackbird is a ZWJ sequence combining 🐦 Bird and ⬛ large black square.,
				 *
				 * 0x1F426 (\uD83D\uDC26) == Bird
				 * 0x200D == Zero-Width Joiner (ZWJ) that links the code points for the new emoji or
				 * 0x200B == Zero-Width Space (ZWS) that is rendered for clients not supporting the new emoji.
				 * 0x2B1B == Large Black Square
				 *
				 * When updating this test for future Emoji releases, ensure that individual emoji that make up the
				 * sequence come from older emoji standards.
				 */
				isIdentical = emojiSetsRenderIdentically(
					context,
					'\uD83D\uDC26\u200D\u2B1B', // as the zero-width joiner sequence
					'\uD83D\uDC26\u200B\u2B1B' // separated by a zero-width space
				);

				return ! isIdentical;
		}

		return false;
	}

	/**
	 * Checks emoji support tests.
	 *
	 * This function may be serialized to run in a Worker. Therefore, it cannot refer to variables from the containing
	 * scope. Everything must be passed by parameters.
	 *
	 * @since 6.3.0
	 *
	 * @private
	 *
	 * @param {string[]} tests Tests.
	 * @param {Function} browserSupportsEmoji Reference to browserSupportsEmoji function, needed due to minification.
	 * @param {Function} emojiSetsRenderIdentically Reference to emojiSetsRenderIdentically function, needed due to minification.
	 *
	 * @return {SupportTests} Support tests.
	 */
	function testEmojiSupports( tests, browserSupportsEmoji, emojiSetsRenderIdentically ) {
		var canvas;
		if (
			typeof WorkerGlobalScope !== 'undefined' &&
			self instanceof WorkerGlobalScope
		) {
			canvas = new OffscreenCanvas( 300, 150 ); // Dimensions are default for HTMLCanvasElement.
		} else {
			canvas = document.createElement( 'canvas' );
		}

		var context = canvas.getContext( '2d', { willReadFrequently: true } );

		/*
		 * Chrome on OS X added native emoji rendering in M41. Unfortunately,
		 * it doesn't work when the font is bolder than 500 weight. So, we
		 * check for bold rendering support to avoid invisible emoji in Chrome.
		 */
		context.textBaseline = 'top';
		context.font = '600 32px Arial';

		var supports = {};
		tests.forEach( function ( test ) {
			supports[ test ] = browserSupportsEmoji( context, test, emojiSetsRenderIdentically );
		} );
		return supports;
	}

	/**
	 * Adds a script to the head of the document.
	 *
	 * @ignore
	 *
	 * @since 4.2.0
	 *
	 * @param {string} src The url where the script is located.
	 *
	 * @return {void}
	 */
	function addScript( src ) {
		var script = document.createElement( 'script' );
		script.src = src;
		script.defer = true;
		document.head.appendChild( script );
	}

	settings.supports = {
		everything: true,
		everythingExceptFlag: true
	};

	// Create a promise for DOMContentLoaded since the worker logic may finish after the event has fired.
	var domReadyPromise = new Promise( function ( resolve ) {
		document.addEventListener( 'DOMContentLoaded', resolve, {
			once: true
		} );
	} );

	// Obtain the emoji support from the browser, asynchronously when possible.
	new Promise( function ( resolve ) {
		var supportTests = getSessionSupportTests();
		if ( supportTests ) {
			resolve( supportTests );
			return;
		}

		if ( supportsWorkerOffloading() ) {
			try {
				// Note that the functions are being passed as arguments due to minification.
				var workerScript =
					'postMessage(' +
					testEmojiSupports.toString() +
					'(' +
					[
						JSON.stringify( tests ),
						browserSupportsEmoji.toString(),
						emojiSetsRenderIdentically.toString()
					].join( ',' ) +
					'));';
				var blob = new Blob( [ workerScript ], {
					type: 'text/javascript'
				} );
				var worker = new Worker( URL.createObjectURL( blob ), { name: 'wpTestEmojiSupports' } );
				worker.onmessage = function ( event ) {
					supportTests = event.data;
					setSessionSupportTests( supportTests );
					worker.terminate();
					resolve( supportTests );
				};
				return;
			} catch ( e ) {}
		}

		supportTests = testEmojiSupports( tests, browserSupportsEmoji, emojiSetsRenderIdentically );
		setSessionSupportTests( supportTests );
		resolve( supportTests );
	} )
		// Once the browser emoji support has been obtained from the session, finalize the settings.
		.then( function ( supportTests ) {
			/*
			 * Tests the browser support for flag emojis and other emojis, and adjusts the
			 * support settings accordingly.
			 */
			for ( var test in supportTests ) {
				settings.supports[ test ] = supportTests[ test ];

				settings.supports.everything =
					settings.supports.everything && settings.supports[ test ];

				if ( 'flag' !== test ) {
					settings.supports.everythingExceptFlag =
						settings.supports.everythingExceptFlag &&
						settings.supports[ test ];
				}
			}

			settings.supports.everythingExceptFlag =
				settings.supports.everythingExceptFlag &&
				! settings.supports.flag;

			// Sets DOMReady to false and assigns a ready function to settings.
			settings.DOMReady = false;
			settings.readyCallback = function () {
				settings.DOMReady = true;
			};
		} )
		.then( function () {
			return domReadyPromise;
		} )
		.then( function () {
			// When the browser can not render everything we need to load a polyfill.
			if ( ! settings.supports.everything ) {
				settings.readyCallback();

				var src = settings.source || {};

				if ( src.concatemoji ) {
					addScript( src.concatemoji );
				} else if ( src.wpemoji && src.twemoji ) {
					addScript( src.twemoji );
					addScript( src.wpemoji );
				}
			}
		} );
} )( window, document, window._wpemojiSettings );

/* ]]> */
</script>
<link rel="stylesheet" id="dashicons-css" href="http://localhost/samuelPortfolioProj/wp-includes/css/dashicons.css?ver=6.7.2" type="text/css" media="all">
<link rel="stylesheet" id="admin-bar-css" href="http://localhost/samuelPortfolioProj/wp-includes/css/admin-bar.css?ver=6.7.2" type="text/css" media="all">
<style id="admin-bar-inline-css" type="text/css">

		@media screen { html { margin-top: 32px !important; } }
		@media screen and ( max-width: 782px ) { html { margin-top: 46px !important; } }
	
@media print { #wpadminbar { display:none; } }
</style>
<style id="wp-emoji-styles-inline-css" type="text/css">

	img.wp-smiley, img.emoji {
		display: inline !important;
		border: none !important;
		box-shadow: none !important;
		height: 1em !important;
		width: 1em !important;
		margin: 0 0.07em !important;
		vertical-align: -0.1em !important;
		background: none !important;
		padding: 0 !important;
	}
</style>
<link rel="stylesheet" id="wp-block-library-css" href="http://localhost/samuelPortfolioProj/wp-includes/css/dist/block-library/style.css?ver=6.7.2" type="text/css" media="all">
<style id="classic-theme-styles-inline-css" type="text/css">
/**
 * These rules are needed for backwards compatibility.
 * They should match the button element rules in the base theme.json file.
 */
.wp-block-button__link {
	color: #ffffff;
	background-color: #32373c;
	border-radius: 9999px; /* 100% causes an oval, but any explicit but really high value retains the pill shape. */

	/* This needs a low specificity so it won't override the rules from the button element if defined in theme.json. */
	box-shadow: none;
	text-decoration: none;

	/* The extra 2px are added to size solids the same as the outline versions.*/
	padding: calc(0.667em + 2px) calc(1.333em + 2px);

	font-size: 1.125em;
}

.wp-block-file__button {
	background: #32373c;
	color: #ffffff;
	text-decoration: none;
}

</style>
<style id="global-styles-inline-css" type="text/css">
:root{--wp--preset--aspect-ratio--square: 1;--wp--preset--aspect-ratio--4-3: 4/3;--wp--preset--aspect-ratio--3-4: 3/4;--wp--preset--aspect-ratio--3-2: 3/2;--wp--preset--aspect-ratio--2-3: 2/3;--wp--preset--aspect-ratio--16-9: 16/9;--wp--preset--aspect-ratio--9-16: 9/16;--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);}:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}body .is-layout-flex{display: flex;}.is-layout-flex{flex-wrap: wrap;align-items: center;}.is-layout-flex > :is(*, div){margin: 0;}body .is-layout-grid{display: grid;}.is-layout-grid > :is(*, div){margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
:root :where(.wp-block-pullquote){font-size: 1.5em;line-height: 1.6;}
</style>
<link rel="stylesheet" id="cdp-css-global-css" href="http://localhost/samuelPortfolioProj/wp-content/plugins/copy-delete-posts/assets/css/cdp-global.min.css?ver=149" type="text/css" media="all">
<link rel="stylesheet" id="cdp-css-css" href="http://localhost/samuelPortfolioProj/wp-content/plugins/copy-delete-posts/assets/css/cdp.min.css?ver=149" type="text/css" media="all">
<link rel="stylesheet" id="cdp-css-user-css" href="http://localhost/samuelPortfolioProj/wp-content/plugins/copy-delete-posts/assets/css/cdp-user.min.css?ver=149" type="text/css" media="all">
<link rel="stylesheet" id="cdp-tooltips-css-css" href="http://localhost/samuelPortfolioProj/wp-content/plugins/copy-delete-posts/assets/css/cdp.tooltip.min.css?ver=149" type="text/css" media="all">
<link rel="stylesheet" id="cdp-css-select-css" href="http://localhost/samuelPortfolioProj/wp-content/plugins/copy-delete-posts/assets/css/cdp-select.min.css?ver=149" type="text/css" media="all">
<link rel="stylesheet" id="header-style-css" href="http://localhost/samuelPortfolioProj/wp-content/themes/samueng/components/header/header.css?ver=1.0" type="text/css" media="all">
<link rel="stylesheet" id="collapse-css-css" href="http://localhost/samuelPortfolioProj/wp-content/themes/samueng/components/collapse/collapse.css?ver=1.0.0" type="text/css" media="all">
<link rel="stylesheet" id="project-desktop-style-css" href="http://localhost/samuelPortfolioProj/wp-content/themes/samueng/css/desktop/single-project-desktop.css?ver=1744877555" type="text/css" media="all">
<link rel="stylesheet" id="portfolio-mobile-style-css" href="http://localhost/samuelPortfolioProj/wp-content/themes/samueng/css/page-portfolio.css?ver=1744877555" type="text/css" media="all">
<link rel="stylesheet" id="samueng-style-css" href="http://localhost/samuelPortfolioProj/wp-content/themes/samueng/style.css?ver=6.7.2" type="text/css" media="all">
<link rel="stylesheet" id="page-contact-style-css" href="http://localhost/samuelPortfolioProj/wp-content/themes/samueng/css/page-contact.css?ver=1.0" type="text/css" media="all">
<link rel="stylesheet" id="highlight-js-dark-theme-css" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/atom-one-dark.min.css" type="text/css" media="all">
<link rel="stylesheet" id="font-awesome-css" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css?ver=6.7.2" type="text/css" media="all">
<script type="text/javascript" src="http://localhost/samuelPortfolioProj/wp-includes/js/jquery/jquery.js?ver=3.7.1" id="jquery-core-js"></script>
<script type="text/javascript" src="http://localhost/samuelPortfolioProj/wp-includes/js/jquery/jquery-migrate.js?ver=3.4.1" id="jquery-migrate-js"></script>
<link rel="https://api.w.org/" href="http://localhost/samuelPortfolioProj/wp-json/"><link rel="alternate" title="JSON" type="application/json" href="http://localhost/samuelPortfolioProj/wp-json/wp/v2/project/261"><link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://localhost/samuelPortfolioProj/xmlrpc.php?rsd">
<meta name="generator" content="WordPress 6.7.2">
<link rel="canonical" href="http://localhost/samuelPortfolioProj/project/pirate-legends/">
<link rel="shortlink" href="http://localhost/samuelPortfolioProj/?p=261">
<link rel="alternate" title="oEmbed (JSON)" type="application/json+oembed" href="http://localhost/samuelPortfolioProj/wp-json/oembed/1.0/embed?url=http%3A%2F%2Flocalhost%2FsamuelPortfolioProj%2Fproject%2Fpirate-legends%2F">
<link rel="alternate" title="oEmbed (XML)" type="text/xml+oembed" href="http://localhost/samuelPortfolioProj/wp-json/oembed/1.0/embed?url=http%3A%2F%2Flocalhost%2FsamuelPortfolioProj%2Fproject%2Fpirate-legends%2F&amp;format=xml">
<meta name="cdp-version" content="1.4.9"><link rel="icon" href="http://localhost/samuelPortfolioProj/wp-content/uploads/2025/03/yellowcat_icon.jpg" sizes="32x32">
<link rel="icon" href="http://localhost/samuelPortfolioProj/wp-content/uploads/2025/03/yellowcat_icon.jpg" sizes="192x192">
<link rel="apple-touch-icon" href="http://localhost/samuelPortfolioProj/wp-content/uploads/2025/03/yellowcat_icon.jpg">
<meta name="msapplication-TileImage" content="http://localhost/samuelPortfolioProj/wp-content/uploads/2025/03/yellowcat_icon.jpg">
<script src="http://localhost/samuelPortfolioProj/wp-includes/js/twemoji.js?ver=6.7.2" defer=""></script><script src="http://localhost/samuelPortfolioProj/wp-includes/js/wp-emoji.js?ver=6.7.2" defer=""></script></head>


        <body class=" customize-support"><div class="cdp-copy-loader-overlay" style="opacity: 0">
    <div class="cdp-text-overlay">
      <h1 style="color: white; font-size: 25px;">Please wait, copying in progress...</h1>
      <p>
        If you’re making a lot of copies it can take a while
        <br>(up to 5 minutes if you’re on a slow server).      </p>
      <span>Average time is 8 copies per second.</span>
    </div>
    <div class="cdp-spinner"></div>
  </div><header class="custom-header samueng-header-container">

            <!-- Main Menu -->
            <nav class="main-menu main-menu-container">

                <div class="header-content site-content-group">

                    <!-- Website Logo -->
                    <div class="website-logo">
                        <img src="http://localhost/samuelPortfolioProj/wp-content/uploads/2025/03/yellowcat_icon.jpg" alt="Site Icon" width="150" height="150">
                    </div>
                    
                    <!-- Website Logo -->
                    <div class="website-name">
                        Samuel Nguyen                    </div>

                </div>

                <div class="menu-wrapper"><nav class="main-nav"><ul id="menu-mainmenu" class="menu"><li id="menu-item-351" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home menu-item-351"><a href="http://localhost/samuelPortfolioProj/">Home</a></li>
<li id="menu-item-39" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-39"><a href="http://localhost/samuelPortfolioProj/portfolio/">Portfolio</a></li>
<li id="menu-item-186" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-186"><a href="http://localhost/samuelPortfolioProj/contact/">Contact</a></li>
</ul></nav></div>            </nav>

            <!-- Banner -->
            <div class="header-banner">
                <!-- Page Title -->
                <div class="header-title">
                    Pirate Legends                </div>

                <img src="http://localhost/samuelPortfolioProj/wp-content/themes/samueng/images/banner 2.png" alt="Banner">
            </div>



        </header>
        
<div class="single-project-mobile-body layout-body-center">
    <div id="content" data-kubio="kubio/root">
            </div>

    <h1 class="project-name">Pirate Legends</h1>    
    <p class="project-start-date"><strong>Start:</strong> March 7, 2022</p>        <p class="project-platforms"><strong>Platforms:</strong> Android, IOS</p>
    <div class="project-layout">
        <div class="project-teaser-trailer">
            <div class="media-wrapper"><iframe title="OPG: Pirates Legend Gameplay Android / iOS" width="500" height="281" src="https://www.youtube.com/embed/JyKG30qOrb0?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe></div>        </div>

        <div class="project-info">
            <h3>Project Info</h3>

            <p><strong>Project Length:</strong> 3 Months</p>
            <p><strong>Project Type:</strong> Team - <strong> Size:</strong>7</p><p><strong>Work At:</strong> Gihot Studio</p>            <p><strong>Responsibilities:</strong> Gameplay &amp; feature programming</p>
            <p><strong>Engine and tools:</strong> Unity</p>
            <p><strong>Languages:</strong> C#</p>
        </div>
    </div>


    <p></p>
    
    <div class="project-description-container">
        <div class="project-field-label">Description:</div>
        <span class="project-description">
            <p><strong>Pirate Legends </strong>is a turn-based game project set in the world of One Piece</p>
<p>The game features eye-catching 3D visuals and a combo-based combat system, where chaining skills together grants bonus damage, bringing a fun and strategic experience for players.</p>
        </span>
    </div>

    <p></p>

    <div class="features-container"><span class="features-label project-field-label">What I Do:</span><div class="what-i-do"><p class="" data-start="83" data-end="138">Here, I was responsible for several tasks, including:</p>
<ul data-start="139" data-end="323">
<li class="" data-start="139" data-end="171">
<p class="" data-start="141" data-end="171">Implementing new features</p>
</li>
<li class="" data-start="172" data-end="198">
<p class="" data-start="174" data-end="198">Fixing UI-related bugs</p>
</li>
<li class="" data-start="199" data-end="323">
<p class="" data-start="201" data-end="323">Developing a <strong data-start="214" data-end="231">random battle</strong> feature with <strong data-start="245" data-end="262">PvP mechanics</strong>, while maintaining consistency with the existing PvP system.</p>
</li>
</ul>
</div></div>    <div class="features-container"><span class="features-label project-field-label">What I Learn:</span><div class="what-i-learn"></div>        <div class="collapse-group">
            <div class="item-collapse-label">
                <div class="collapse-icons">
                    <span class="collapse-icon collapse-icon-up"></span>
                    <span class="collapse-icon collapse-icon-down"></span>
                </div>
                Design Pattern            </div>
            <div class="item-collapse-details">
                <p></p><h3>Description:</h3> Through this project, I had the opportunity to work with and learn various design patterns, gaining a solid understanding of how and when to apply them.
Below are some of the patterns I’ve used, along with my own demo implementations.
<div class="collapse-group group-1">
<div class="item-collapse-label">
                <div class="collapse-icons">
                    <span class="collapse-icon collapse-icon-up"></span>
                    <span class="collapse-icon collapse-icon-down"></span>
                </div>
Singleton Pattern

</div>
<div class="item-collapse-details">
<h2>What is a Singleton?</h2>
The <strong>Singleton</strong> is a design pattern used to ensure that a class has <strong>only one instance</strong>
and provides a <strong>global access point</strong> to that instance.
While convenient, if misused or overused, it can lead to messy code, <strong>tight coupling</strong>,
and make your codebase harder to <em>test</em> and <em>extend</em>. Here's a breakdown:
<h2>Why use Singleton?</h2>
<ul>
 	<li><strong>Ensures a single instance</strong>: Some systems in a game are designed to exist only once, for example:
<ul>
 	<li><code>GameManager</code></li>
 	<li><code>AudioManager</code></li>
 	<li><code>UIManager</code></li>
 	<li><code>Save/Load System</code></li>
</ul>
</li>
 	<li><strong>Easily accessible</strong> from anywhere in the codebase without having to pass references around.</li>
 	<li>Helps <strong>manage global state</strong> effectively (e.g., current game status, audio state, etc.).</li>
</ul>
<h2>When to use Singleton in Unity?</h2>
<table>
<thead>
<tr>
<th>Use Case</th>
<th>Why Singleton works well</th>
</tr>
</thead>
<tbody>
<tr>
<td>Game state management</td>
<td>Keep track of level, lives, play/quit states</td>
</tr>
<tr>
<td>Audio manager</td>
<td>Background music and SFX across all scenes</td>
</tr>
<tr>
<td>Scene transitions</td>
<td>Centralized and unified scene loading logic</td>
</tr>
<tr>
<td>Object pooling</td>
<td>Reuse objects efficiently without re-instantiating</td>
</tr>
<tr>
<td>Settings/configurations</td>
<td>Store and apply global settings (graphics, audio, etc.)</td>
</tr>
</tbody>
</table>
<h2>How to Implement Singleton:</h2>
<pre><code class="hljs language-typescript">
<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Singleton</span> where T : <span class="hljs-keyword">class</span>, <span class="hljs-title function_">new</span>(<span class="hljs-params"></span>)
{
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> T instance;
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> T <span class="hljs-title class_">Instance</span>
    {
        get
        {
            <span class="hljs-keyword">if</span> (instance == <span class="hljs-literal">null</span>)
            {
                instance = <span class="hljs-keyword">new</span> <span class="hljs-title function_">T</span>();
			}
            <span class="hljs-keyword">return</span> instance;
        }
    }
}
        </code></pre>
Implement:
<pre><code class="hljs language-kotlin">
    <span class="hljs-keyword">class</span> <span class="hljs-title class_">ResourcesManager</span> : <span class="hljs-type">Singleton</span>
    </code></pre>
Using:
Call <code>ResourcesManager.Instance.</code>


Example:
<pre><code class="hljs language-kotlin">
    <span class="hljs-keyword">var</span> sprite = ResourcesManager.Instance.GetTileSprite(<span class="hljs-keyword">data</span>[r, c].TileEnum);
    </code></pre>
<h2>Pitfalls of overusing Singleton</h2>
<ul>
 	<li><strong>Tight coupling</strong>: Too many classes depend on the Singleton, making small changes ripple through the whole system.</li>
 	<li><strong>Hard to test and maintain</strong>: Global state makes unit testing more complex and error-prone.</li>
 	<li><strong>Hidden dependencies</strong>: It's unclear which classes rely on the Singleton, reducing code clarity and debuggability.</li>
 	<li><strong>Potential memory leaks</strong> if not properly cleaned up, especially with <code>MonoBehaviour</code>-based singletons.</li>
</ul>
<h2>Best practices for using Singleton in Unity</h2>
<ul>
 	<li>Don't treat Singleton as a “god object” to dump everything into.</li>
 	<li>Avoid excessive access from everywhere — keep control and structure.</li>
 	<li>Know the difference between when you <strong>need a Singleton</strong> and when a <strong>static class or Service Locator</strong> is sufficient.</li>
 	<li>Be cautious when combining Singleton with <code>DontDestroyOnLoad</code> to avoid duplicated instances across scenes.</li>
 	<li><strong>Use interfaces to reduce coupling</strong>: Inject the Singleton via interface whenever possible to keep your architecture clean and testable.</li>
</ul>
</div>
</div>
<!--more-->

<!--more-->
<div class="collapse-group group-2">
<div class="item-collapse-label">
                <div class="collapse-icons">
                    <span class="collapse-icon collapse-icon-up"></span>
                    <span class="collapse-icon collapse-icon-down"></span>
                </div>
State Pattern

</div>
<div class="item-collapse-details">
<h2>What is the State Pattern?</h2>
The <strong>State Pattern</strong> is a behavioral design pattern that allows an object to alter its behavior
when its internal state changes.
<h2>When should you use the State Pattern?</h2>
You should consider using the <strong>State Pattern</strong> when:

You have a single object that can be in multiple states, and <strong>each state requires its own distinct logic or behavior</strong>.

It’s especially helpful when:
<ul>
 	<li>The logic for handling each state is complex.</li>
 	<li>You want to avoid long <code>if-else</code> or <code>switch</code> blocks.</li>
 	<li>States need to trigger specific transitions or side-effects.</li>
 	<li>You want to make each state testable and independent.</li>
</ul>
<h2>Example:</h2>
State.cs
<pre><code class="hljs language-csharp">
<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">BaseState</span>
{
	<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Enter</span>()</span>
	{
		OnEnter();
	}

	<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Exit</span>()</span>
	{
		OnExit();
	}

	<span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">virtual</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnEnter</span>()</span>
	{

	}

	<span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">virtual</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnExit</span>()</span>
	{

	}
}

        </code></pre>
StateMachine.cs
<pre><code class="hljs language-csharp">
<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">StateMachine</span>
{
	<span class="hljs-keyword">private</span> Dictionary&lt;T, BaseState&gt; mStates;
	<span class="hljs-keyword">private</span> BaseState mCrrState = <span class="hljs-literal">null</span>;
	<span class="hljs-keyword">private</span> T mCrrKey;

	<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">StateMachine</span>(<span class="hljs-params">Dictionary&lt;T, BaseState&gt; states, T startState</span>)</span>
	{
		<span class="hljs-keyword">this</span>.mStates = <span class="hljs-keyword">new</span> Dictionary&lt;T, BaseState&gt;();
		<span class="hljs-keyword">this</span>.mStates.AddRange(states);
		<span class="hljs-keyword">this</span>.mCrrKey = startState;

		<span class="hljs-keyword">if</span> (!states.ContainsKey(startState))
		{
			Debug.LogError(<span class="hljs-string">"Failed to Init default states: "</span> + startState);
			<span class="hljs-keyword">return</span>;
		}

		mCrrState = states[startState];
		mCrrState?.Enter();
	}

	<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ChangeState</span>(<span class="hljs-params">T state</span>)</span>
	{
		<span class="hljs-keyword">if</span> (!mStates.ContainsKey(state))
		{
			Debug.LogError(<span class="hljs-string">$"The State: <span class="hljs-subst">{state.ToString()}</span> is not Registered!"</span>);
		}
		<span class="hljs-keyword">else</span>
		{
			mCrrState.Exit();
			mCrrKey = state;
			mCrrState = mStates[mCrrKey];
			mCrrState.Enter();
		}
	}
}
        </code></pre>
Implement
<pre><code class="hljs language-csharp">

	<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ChangeState</span>(<span class="hljs-params">SceneEnum state</span>)</span>
	{
		mGameStates.ChangeState(state);
	}

	<span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">InitGameStateMachine</span>()</span>
	{

		Dictionary&lt;SceneEnum, BaseState&gt; stateDict = <span class="hljs-keyword">new</span> Dictionary&lt;SceneEnum, BaseState&gt;()
		{
			{ SceneEnum.Loading, <span class="hljs-keyword">new</span> LoadingScene()},
			{ SceneEnum.Transition, <span class="hljs-keyword">new</span> TransitionScene()},
			{ SceneEnum.Main, <span class="hljs-keyword">new</span> MainScene()},
			{ SceneEnum.GamePlay, <span class="hljs-keyword">new</span> BattleScene()},
		};

		mGameStates = <span class="hljs-keyword">new</span> StateMachine(stateDict, SceneEnum.Main);
	}
        </code></pre>
Using
<pre><code class="hljs language-csharp">
	<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">StartGame</span>()</span>
	{
		ChangeState(SceneEnum.GamePlay);
	}

	<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ExitGame</span>()</span>
	{
		ChangeState(SceneEnum.Main);
	}
        </code></pre>
</div>
</div>
<div class="collapse-group group-3">
<div class="item-collapse-label">
                <div class="collapse-icons">
                    <span class="collapse-icon collapse-icon-up"></span>
                    <span class="collapse-icon collapse-icon-down"></span>
                </div>
Observer Pattern

</div>
<div class="item-collapse-details">
<h2>What is the Observer Pattern?</h2>
The <strong>Observer Pattern</strong> is a design pattern where:
<blockquote><strong>One object (called the Subject)</strong> notifies <strong>multiple other objects (called Observers)</strong> automatically when something changes.</blockquote>
Think of it like clicking <strong>"Follow"</strong> on social media. When that person posts something new, you and all other followers get notified — and they don’t even need to know who their followers are.
<h2>In programming (e.g., Unity):</h2>
<ul>
 	<li>You have a <strong>PlayerHealth</strong> system (Subject).</li>
 	<li>You have a <strong>HealthBar UI</strong>, <strong>SoundManager</strong>, and <strong>AchievementTracker</strong> (Observers).</li>
 	<li>Whenever the player’s health changes, <strong>PlayerHealth notifies</strong> all registered observers.</li>
 	<li>Each observer reacts in its own way: the UI updates the health bar, the sound manager plays a hit sound, and the achievement system checks for progress.</li>
</ul>
<h2>Benefits:</h2>
<ul>
 	<li><strong>Loose coupling</strong> between components — easier to manage and scale.</li>
 	<li><strong>Easy maintenance</strong>: you can add new observers without modifying the subject.</li>
 	<li><strong>Great for event-driven systems</strong>, or when many parts of your app react to a single change.</li>
</ul>
<h2>Example:</h2>

<pre><code class="hljs language-csharp">
<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Dispatcher</span>&lt;<span class="hljs-title">T</span>&gt;
{
	<span class="hljs-keyword">private</span> Dictionary&lt;T, Action&lt;<span class="hljs-built_in">object</span>&gt;&gt; mCallbacks = <span class="hljs-keyword">new</span> Dictionary&lt;T, Action&lt;<span class="hljs-built_in">object</span>&gt;&gt;();

	<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">RegisterCallback</span>(<span class="hljs-params">T name, Action&lt;<span class="hljs-built_in">object</span>&gt; callback</span>)</span>
	{
		Debug.Log(<span class="hljs-string">"[Dispatcher] RegisterCallback &gt; name: "</span> + name.ToString());
		<span class="hljs-keyword">if</span> (!mCallbacks.ContainsKey(name))
		{
			mCallbacks.Add(name, callback);
		}
		<span class="hljs-keyword">else</span> 
		{ 
			mCallbacks[name] += callback;
		}
	}

	<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">UnregisterCallback</span>(<span class="hljs-params">T name, Action&lt;<span class="hljs-built_in">object</span>&gt; callback</span>)</span>
	{
		Debug.Log(<span class="hljs-string">"[Dispatcher] UnregisterCallback &gt; name: "</span> + name.ToString());
		<span class="hljs-keyword">if</span> (mCallbacks.ContainsKey(name)) {
			mCallbacks[name] -= callback;
			<span class="hljs-keyword">if</span> (mCallbacks[name] == <span class="hljs-literal">null</span>)
			{
				mCallbacks.Remove(name);
			}
		}
	}

	<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">InvokeEvent</span>(<span class="hljs-params">T name, <span class="hljs-built_in">object</span> data</span>)</span>
	{
		<span class="hljs-keyword">if</span> (mCallbacks.ContainsKey(name))
		{
			Debug.Log(<span class="hljs-string">$"[Dispatcher] InvokeEvent &gt; name: <span class="hljs-subst">{name.ToString()}</span> &gt; length: <span class="hljs-subst">{mCallbacks[name].GetInvocationList().Length}</span>"</span>);
			mCallbacks[name]?.Invoke(data);
		}
	}
}
</code></pre>


Implement
<pre><code class="hljs language-java">
<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EventManager</span>
{
	<span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">Dispatcher</span> <span class="hljs-variable">GED</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Dispatcher</span>(); <span class="hljs-comment">//Game event Dispatcher</span>
	<span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">Dispatcher</span> <span class="hljs-variable">UIED</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Dispatcher</span>(); <span class="hljs-comment">//UI event Dispatcher</span>
	<span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">Dispatcher</span> <span class="hljs-variable">NED</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Dispatcher</span>(); <span class="hljs-comment">//Net event Dispatcher</span>
}
</code></pre>

Register Listenning an event
<pre><code class="hljs language-csharp">

	EventManager.UIED.RegisterCallback(UIEvent.MoveCharacter, MoveCharacter);

	<span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">MoveCharacter</span>(<span class="hljs-params"><span class="hljs-built_in">object</span> data</span>)</span>
	{
		Debug.Log(<span class="hljs-string">"MoveCharacter"</span>);

                <span class="hljs-comment">//Handling code here:</span>
	}
</code></pre>
Send an event
<pre><code class="hljs language-swift">
<span class="hljs-keyword">public</span> partial <span class="hljs-keyword">class</span> <span class="hljs-title class_">UI_Navigation</span>
{
	<span class="hljs-keyword">public</span> void <span class="hljs-type">Init</span>()
	{
		m_arrowUp.onClick.<span class="hljs-type">Add</span>(() <span class="hljs-operator">=</span> <span class="hljs-operator">&gt;</span>
		{
			<span class="hljs-type">EventManager</span>.<span class="hljs-type">UIED</span>.<span class="hljs-type">InvokeEvent</span>(<span class="hljs-type">UIEvent</span>.<span class="hljs-type">MoveCharacter</span>, <span class="hljs-type">Direction</span>.<span class="hljs-type">Up</span>);
		});
		m_arrowDown.onClick.<span class="hljs-type">Add</span>(() <span class="hljs-operator">=</span> <span class="hljs-operator">&gt;</span>
		{
			<span class="hljs-type">EventManager</span>.<span class="hljs-type">UIED</span>.<span class="hljs-type">InvokeEvent</span>(<span class="hljs-type">UIEvent</span>.<span class="hljs-type">MoveCharacter</span>, <span class="hljs-type">Direction</span>.<span class="hljs-type">Down</span>);
		});
		m_arrowLeft.onClick.<span class="hljs-type">Add</span>(() <span class="hljs-operator">=</span> <span class="hljs-operator">&gt;</span>
		{
			<span class="hljs-type">EventManager</span>.<span class="hljs-type">UIED</span>.<span class="hljs-type">InvokeEvent</span>(<span class="hljs-type">UIEvent</span>.<span class="hljs-type">MoveCharacter</span>, <span class="hljs-type">Direction</span>.<span class="hljs-type">Left</span>);
		});
		m_arrowRight.onClick.<span class="hljs-type">Add</span>(() <span class="hljs-operator">=</span> <span class="hljs-operator">&gt;</span>
		{
			<span class="hljs-type">EventManager</span>.<span class="hljs-type">UIED</span>.<span class="hljs-type">InvokeEvent</span>(<span class="hljs-type">UIEvent</span>.<span class="hljs-type">MoveCharacter</span>, <span class="hljs-type">Direction</span>.<span class="hljs-type">Right</span>);
		});
	}
}
</code></pre>
</div>
</div><p></p>            </div>
        </div>
                <div class="collapse-group">
            <div class="item-collapse-label">
                <div class="collapse-icons">
                    <span class="collapse-icon collapse-icon-up"></span>
                    <span class="collapse-icon collapse-icon-down"></span>
                </div>
                FairyGUI - UI Design Tool.            </div>
            <div class="item-collapse-details">
                <p></p><h3>Description:</h3> <h1>FairyGUI Overview</h1>
    <p>FairyGUI is a flexible and easy-to-use UI framework that is commonly used in Unity game development. It allows developers to design and manage UIs separately from the core game logic, improving both efficiency and flexibility. It is highly integrated with Unity and provides a straightforward way to create, customize, and manage UI elements.</p>

    <h2>Key Features of FairyGUI</h2>
    <h3>1. UI Design and Logic Separation</h3>
    <p>
FairyGUI allows a clear separation between UI design and game logic. You can design the UI in the <strong>FairyGUI Editor</strong>, and then write interaction logic in Unity C# scripts.
</p>

<h3>UI Design Tools for Artists</h3>
<p>
The FairyGUI Editor provides a rich set of tools specifically tailored for UI/UX designers and artists. Features include:
</p><ul>
  <li>Precise alignment tools for arranging UI elements (top, left, center, etc.).</li>
  <li>Anchor-based positioning relative to other UI components.</li>
  <li>Support for timeline-based animations and <code>Transition</code> tools to orchestrate complex movements.</li>
  <li>Use of <code>Controller</code> to manage different UI states (e.g., toggling between tabs, switching skins).</li>
</ul>
These tools enable artists to build UI visually without writing any code, streamlining collaboration with developers.
<img src="http://localhost/samuelPortfolioProj/wp-content/uploads/2025/04/fairyGUI_editor_demo.png" style="margin-top:10px;">
<p></p>

<h3>Logic Integration in Unity</h3>
<p>
When you export from the FairyGUI Editor, it generates:
</p><ul>
  <li>Atlas texture files (<code>.png</code>).</li>
  <li>Data packages (<code>.bytes</code>).</li>
  <li>Auto-generated Unity C# script files for each <code>Component</code> or <code>Window</code>.</li>
</ul>
Each component script includes references to named UI elements that were configured in the editor using variable names. This helps developers hook into specific parts of the UI easily.
<p></p>

<div style="display: flex; align-items: flex-start;">
  <img src="http://localhost/samuelPortfolioProj/wp-content/uploads/2025/04/fairyGUI_demo_panel_stage_gcomponent.png" alt="Image 1" style="margin-right: 10px;">
  <img src="http://localhost/samuelPortfolioProj/wp-content/uploads/2025/04/fairyGUI_demo_panel_stage_controller.png" alt="Image 2">
</div>


    <h3>2. Exported Assets</h3>
    <p>When you export a UI from the <strong>FairyGUI Editor</strong>, you get the following files:</p>
    <ul>
        <li><strong>Atlas.png</strong>: This file contains all the textures for the UI elements. Instead of having multiple texture files, FairyGUI consolidates them into a single image to optimize rendering.</li>
        <li><strong>Package.bytes</strong>: This file contains the UI layout data, such as the arrangement of UI components, animations, and references to textures from the atlas. This is the core data used by the UI in Unity.
            <img src="http://localhost/samuelPortfolioProj/wp-content/uploads/2025/04/fairyGUI_resource.png"></li>
        <li><strong>UI Component Scripts</strong>: These are the automatically generated scripts tied to the UI components. They provide functionality like handling button clicks, dragging elements, or updating values on the UI.
            <img src="http://localhost/samuelPortfolioProj/wp-content/uploads/2025/04/fairyGUI_script.png"></li>
    </ul>

    <h3>3. Process of Using FairyGUI in Unity</h3>
    <ol>
        <li><strong>UI Design</strong>: You design the UI in <strong>FairyGUI Editor</strong>.</li>
        <li><strong>Exporting</strong>: The UI is exported into assets like <strong>Atlas.png</strong>, <strong>Package.bytes</strong>, and <strong>UI Component Scripts</strong>.</li>
        <li><strong>Importing</strong>: In Unity, you import these assets. The package data is loaded using <code>UIPackage.AddPackage()</code>, and UI components are instantiated and manipulated through the scripts.</li>
        <li><strong>Logic Separation</strong>: The UI data is separate from the logic. You can change the UI's appearance and layout without touching the game logic or code. The scripts manage the functionality of UI components, but they are independent of the visual elements.</li>
    </ol><p></p>            </div>
        </div>
                <div class="collapse-group">
            <div class="item-collapse-label">
                <div class="collapse-icons">
                    <span class="collapse-icon collapse-icon-up"></span>
                    <span class="collapse-icon collapse-icon-down"></span>
                </div>
                Worked with the client-server architecture.            </div>
            <div class="item-collapse-details">
                <p></p><h3>Description:</h3> <div>
  <h3>Client-Server Task Experience</h3>
  <p>
    In another task, I worked with a client-server model to make requests and retrieve the necessary data for specific features.
  </p>
  <p>
    I was not the one who designed the client-server architecture for the project. However, I have the ability to read and understand the project structure, know how to send requests and handle responses, as well as construct appropriate buffer messages needed for the feature implementation.
  </p>
</div>
<p></p>            </div>
        </div>
                <div class="collapse-group">
            <div class="item-collapse-label">
                <div class="collapse-icons">
                    <span class="collapse-icon collapse-icon-up"></span>
                    <span class="collapse-icon collapse-icon-down"></span>
                </div>
                Learn about 3D model            </div>
            <div class="item-collapse-details">
                <p></p><h3>Description:</h3> <div class="section">
  <h2>Understanding a 3D Model in Unity</h2>

  <p>
    While I can't claim to fully master every aspect of 3D models, I have spent time learning and practicing the fundamentals.
    I've worked with 3D characters by adjusting transforms (<strong>rotation</strong>, <strong>scale</strong>),
    replacing <strong>textures</strong> and <strong>shaders</strong>, and modifying components like
    <code>Skinned Mesh Renderer</code>.
  </p>

  <p>
    From my perspective, a 3D model consists of several core components:
    <strong>Mesh, UV Mapping, Material, Shader, Textures, Rigging, and Animation</strong>.
  </p>

  <h3>Dividing a 3D Model into Data and Functionality</h3>

<strong>Data includes:</strong>
      <ul>
        <li><strong>Mesh</strong> – is a collection of vertices, edges, and faces that defines the shape of a 3D object.</li>
        <li><strong>Textures</strong> – Main texture, normal map, detail map, etc.</li>
        <li><strong>Materials</strong> – acts as an input configuration for shaders, supplying textures, colors, and properties</li>
        <li><strong>Animation</strong> – is a data-driven system or a time-based instruction set for rigged models.</li>
      </ul>

<strong>Function</strong>
      <ul>
        <li><strong>Shader</strong> – is a program controls visual rendering on the GPU</li>
        <li><strong>UV Mapping</strong> – is a technique for mapping coordinates from a texture onto a 3D mesh.</li>
        <li><strong>Rigging</strong> – is a control system or skeletal setup for mesh deformation.</li>
      </ul>


  

<div class="collapse-group group-2">
    <div class="item-collapse-label">
        <div class="collapse-icons">
            <span class="collapse-icon collapse-icon-up"></span>
            <span class="collapse-icon collapse-icon-down"></span>
        </div>
        For more detail about Role of Shaders
    </div>
    <div class="item-collapse-details">

<h3>Rendering Pipeline Overview</h3>

  <h4>CPU Side (Preprocessing)</h4>
  <ol>
    <li><strong>Culling &amp; Visibility Check</strong> – Determine which objects are visible to the camera</li>
    <li><strong>Camera Setup</strong> – Calculate the camera matrix and projection space</li>
    <li><strong>Lighting Setup</strong> – Gather data from light sources (direction, intensity, shadow, etc.)</li>
    <li><strong>Sorting</strong> – Sort objects by material, transparency, and render queue</li>
    <li><strong>Draw Call Preparation</strong> – Prepare GPU instructions</li>
  </ol>

  <h4>GPU Side (Rendering)</h4>

  <img src="http://localhost/samuelPortfolioProj/wp-content/uploads/2025/04/graphics-pipeline.png" style="margin: 20px; padding: 20px; background-color
: #fffaeb">


  <ol>
    <li><strong>Vertex Shader Stage</strong> – Transform vertices and pass data (UVs, normals, etc.)</li>
    <li><strong>Rasterization</strong> – Convert triangles into pixel fragments</li>
    <li><strong>Fragment Shader Stage</strong> – Apply textures, lights, and shading per-pixel</li>
    <li><strong>Depth &amp; Blending</strong> – Depth testing and pixel blending for transparency or effects</li>
    <li><strong>Final Frame Composition</strong> – Output the final rendered image</li>
  </ol>

<h2>Role of Shaders and Their Relationship with 3D Model Data</h2>
<p>In Unity, a <strong>Shader</strong> is a GPU-executed program that defines how lighting, color, and visual effects are rendered on the surface of a 3D model. Shaders play a central role in the rendering process by using model data and textures to calculate the final color of each on-screen pixel.</p>

<h3>Data Involved with Shaders</h3>
<table border="1" cellpadding="8" cellspacing="0">
  <thead>
    <tr>
      <th>Data</th>
      <th>Description</th>
      <th>How the Shader Uses It</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Mesh</strong></td>
      <td>Contains vertices, normals, UVs...</td>
      <td>Shaders use vertex positions and normals to compute lighting and screen-space positioning.</td>
    </tr>
    <tr>
      <td><strong>UV Mapping</strong></td>
      <td>Maps vertices to specific texture coordinates</td>
      <td>Shaders use UVs to sample colors from the correct texture coordinates.</td>
    </tr>
    <tr>
      <td><strong>Texture</strong></td>
      <td>Bitmap images (Diffuse, Normal, Emission...)</td>
      <td>Shaders use these to simulate surface details, reflection, emission, etc.</td>
    </tr>
    <tr>
      <td><strong>Material</strong></td>
      <td>Contains textures, physical parameters, base colors, etc.</td>
      <td>Acts as a bridge between the 3D model and the shader, passing data into the shader.</td>
    </tr>
    <tr>
      <td><strong>Rigging &amp; Animation</strong></td>
      <td>Skeleton structure and motion</td>
      <td>Pre-processed by CPU/GPU (via Skinned Mesh Renderer), provides dynamic vertex positions.</td>
    </tr>
  </tbody>
</table>

<h3>Shader Stages in the Rendering Pipeline</h3>
<table border="1" cellpadding="8" cellspacing="0">
  <thead>
    <tr>
      <th>Step</th>
      <th>Stage</th>
      <th>Shader Involved</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>Vertex Processing</td>
      <td><strong>Vertex Shader</strong> computes each vertex’s final screen position using the Model-View-Projection matrix.</td>
    </tr>
    <tr>
      <td>2</td>
      <td>Fragment Processing</td>
      <td><strong>Fragment Shader</strong> calculates per-pixel color based on texture data, lighting, and special effects.</td>
    </tr>
    <tr>
      <td>3</td>
      <td>Lighting &amp; Post-Processing</td>
      <td>Some shaders (like in URP) also handle realistic lighting models (e.g., Phong, PBR) and screen effects.</td>
    </tr>
  </tbody>
</table>

<h3>Conclusion</h3>
<p>A Shader alone doesn’t produce stunning visuals—it relies on data from the 3D model (<strong>mesh, UVs, textures, animations, rigging...</strong>) to perform visual computations. Think of the shader as the <strong>“chef”</strong>, while the model data is the <strong>“ingredients.”</strong> The quality of the final output depends on both.</p>


    </div>
</div><p></p>            </div>
        </div>
        </div>    
</div>



<hr>
<div id="footer" role="contentinfo">
<!-- If you'd like to support WordPress, having the "powered by" link somewhere on your blog is the best way; it's our only promotion or advertising. -->
	<p>
		Samuel Nguyen is proudly powered by <a href="https://wordpress.org/">WordPress</a>	</p>
</div>
</div>

<!-- Gorgeous design by Michael Heilemann - http://binarybonsai.com/ -->

		
  <script>
    if (typeof ajaxurl === 'undefined') ajaxurl = 'http://localhost/samuelPortfolioProj/wp-admin/admin-ajax.php';
  </script>
  <div class="cdp-copy-alert-success" style="top: -28px; opacity: 0; display: none;">
    <img src="http://localhost/samuelPortfolioProj/wp-content/plugins/copy-delete-posts/assets/imgs/copy.png" alt="Successfull copy image">
  </div>
    
  <input type="text" hidden="" id="cdp-purl" style="display: none; visibility: hidden;" value="http://localhost/samuelPortfolioProj/wp-content/plugins/copy-delete-posts">
  
    <input type="text" hidden="" id="cdp-current-post-id" style="display: none; visibility: hidden;" value="261">
  
  
    
<style id="core-block-supports-inline-css" type="text/css">
/**
 * Core styles: block-supports
 */

</style>
<script type="text/javascript" src="http://localhost/samuelPortfolioProj/wp-includes/js/hoverintent-js.min.js?ver=2.2.1" id="hoverintent-js-js"></script>
<script type="text/javascript" src="http://localhost/samuelPortfolioProj/wp-includes/js/admin-bar.js?ver=6.7.2" id="admin-bar-js"></script>
<script type="text/javascript" src="http://localhost/samuelPortfolioProj/wp-includes/js/jquery/ui/core.js?ver=1.13.3" id="jquery-ui-core-js"></script>
<script type="text/javascript" src="http://localhost/samuelPortfolioProj/wp-includes/js/jquery/ui/mouse.js?ver=1.13.3" id="jquery-ui-mouse-js"></script>
<script type="text/javascript" src="http://localhost/samuelPortfolioProj/wp-includes/js/jquery/ui/draggable.js?ver=1.13.3" id="jquery-ui-draggable-js"></script>
<script type="text/javascript" src="http://localhost/samuelPortfolioProj/wp-includes/js/jquery/ui/droppable.js?ver=1.13.3" id="jquery-ui-droppable-js"></script>
<script type="text/javascript" src="http://localhost/samuelPortfolioProj/wp-includes/js/jquery/ui/sortable.js?ver=1.13.3" id="jquery-ui-sortable-js"></script>
<script type="text/javascript" id="cdp-js-global-js-extra">
/* <![CDATA[ */
var cdpGlobalJS = {"strDissmisIssue":"There was an issue while dismissing banner, please do it next time again.","strDissmisRequestIssue":"Cannot send dismiss request. Are you connected to the internet?","strReviewReview":"Thank you very much for the review, this banner will not appear again!","strReviewAlready":"Thank you very much for the review, this banner will not appear again!","strReviewLater":"Alright! We will ask you again in 14 days!","strReviewDefault":"This banner will not appear again, if any feature is missing you can ask for it on our support forum!","strTasksCleared":"Tasks cleared!","strTasksUpdateIssue":"We couldn't update task list, please try again later or kill tasks individualy.","strTasksUpdateIssue2":"We couldn't update task list, please try again later or kill tasks individualy.","strTaskHide":"The task has been hidden","strTaskHideIssue":"There was an error and we couldn't hide the task.","strTaskHideIssue2":"There was an error and we couldn't hide the task.","strTaskKill":"The task has been killed","strTaskKillIssue":"There was an error and we couldn't kill the task.","strTaskKillIssue2":"There was an error and we couldn't kill the task.","strCDPInstallSuccess":"Plugin has been installed successfully, feel free to check those awesome features!","strCDPInfo":"Copy & Delete Posts","strCDPInfoPremium":"Premium","strHideBannerNow":"It will hide this banner just for now.","strErrWithNotif":"There was an error with this notification.","strCDPInfo2":"Copy & Delete Posts","ajaxNonce":"9970eddc9a"};
/* ]]> */
</script>
<script type="text/javascript" src="http://localhost/samuelPortfolioProj/wp-content/plugins/copy-delete-posts/assets/js/cdp-global.min.js?ver=149" id="cdp-js-global-js"></script>
<script type="text/javascript" id="cdp-js-extra">
/* <![CDATA[ */
var cdpJS = {"strNoItems":"No items to show, try with other filters!","strIntroSaveIssue":"Something went wrong and we couldn't save intro settings!","strIntroSaveIssue2":"Something went wrong and we couldn't save intro settings.","strIntroUpdateIssue":"Something went wrong and we couldn't update intro settings \u2013 try again!","strIntroUpdateIssue2":"Something went wrong and we couldn't update intro settings. \u2013 Please check console for more info.","strSettingsSaved":"All your settings were saved!","strSettingsSaveIssue":"Something went wrong and we couldn't save your settings.","strSettingsSaveIssue2":"Something went wrong and we couldn't save your settings. \u2013 Please check console for more info.","strTogglableName":"(Name of original)","strCopyNumIssue":"You need to insert positive number for copies.","strCopyPostIssue":"Something went wrong and we couldn't copy this post \u2013 please try again!","strCopyPostIssueConsInfo":"Something went wrong and we couldn't copy this post. \u2013 See dev console for more info.","strTooltipBtnIssue":"Couldn't recognize that button, please try again.","strSelectedProfIssue":"Unable to recognize selected profile, please try again.","strSelectedProfGetIssue":"Something went wrong and we couldn't get profile settings. \u2013 Check console for more details","strConsLogErr":"Copy & Delete Post \u2013 Error","strSelectedProfGetIssue2":"Something went wrong and we couldn't get profile settings \u2013 please try again!","strCopyInProgress":"Copy in progress...","strServerDataIssue":"There was an error while getting data from server, please try again.","strPostListIssue":"Something went wrong and we couldn't get post list. \u2013 Please check console for more info.","strCheckDuplicatesSearch":"Please, check for: which duplicates you are looking for","strServerConnectIssue":"Cannot connect to the server, premium filters will not be applied.","strFilterNotSelected":"You did not select any filter.<br>Click <a href=\"#\" class=\"cdp-show-the-copies\">here<\/a> to show all copies (of the selected post type) made by this plugin.","strNoDataForFilter":"No posts\/pages meeting the current filter conditions.","strCheckSteps":"Please check that you completed all steps, before this task!","strSelectPostToDel":"Nothing to do here, please select at least one post to delete.","strFieldWrongCount":"You have wrong count in throttling field, please fix.","strDeletionProcessStarted":"Deletion process started, you can close this page now and wait till the process ends!","strDeletionTaskStart":"Something went wrong and we couldn't setup the deletion task.","strDeletionTaskEnd":"\u2013 Please try without throttling.","strDeletionTaskConsInfo":"Something went wrong and we couldn't setup the deletion task. \u2013 Please check console for more info.","strLicenseKeyEmpty":"Please enter license key, currently it is empty.","strLicenseActiveReloading":"License is already active, let us reload the page!","strLicenseValidPressBtn":"License is valid, press the button again to activate!","strUnknownRespRefreshPage":"Unknown response, please try refresh the page!","strSendRequestIssue":"Something went wrong and we couldn't send request, please try refresh page and try again.","strSendRequestIssue2":"Something went wrong and we couldn't send request, are you connected to the internet?","strIncludingHtml":"<b>including<\/b> empty","strIncludingHtml2":"only if <u><b>not<\/b><\/u> empty","strTogglableNameChange":"Change it to (Name of original)","strTogglableNameChangeBlank":"Change it to blank","strDeletingPosts":"Deleting Posts","strAutoCleanPosts":"Auto Cleaning-up","strKill":"Kill","strDeletedPosts":"Deleted Posts","strAutoCleanedPosts":"Auto Cleaned-up","strHide":"Hide","strDefCopySettingsStart":"Define your copy settings","strDefCopySettingsLink":"here","strCopyToOtherSiteHtml":"If you\u2019re on a multisite you can copy it to other sites with the Premium Plugin. <a href=\"https:\/\/sellcodes.com\/CylMIdJD\" target=\"_blank\">Order it now!<\/a>","strPremFeatureHtml":"This is a Premium Feature.<br><a href=\"https:\/\/sellcodes.com\/CylMIdJD\" target=\"_blank\">Check it out and upgrade today<\/a>,<br>we made it <b>really affordable!<\/b>","strPreOrderHtml":"This is a Premium Feature.<br><a href=\"https:\/\/sellcodes.com\/CylMIdJD\" target=\"_blank\">Check it out and upgrade today<\/a>,<br>we made it <b>really affordable!<\/b>","strMultisiteCanCopy":"If you\u2019re on a multisite you can copy it to other sites.","strChangeTypeOfCopy":"Change the type of this copy <span class=\"cdp-premium-icon cdp-big-icon\"><\/span>","strPostDuplicateOf":"This post is a duplicate of","strAreYouSure":"Are you REALLY sure?","strYouAreCrazy":"You're crazy! \u2013 Here is the output:","strDebugOutputEnd":"\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013- END OF THE DEBUG OUTPUT \u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013- ","copySuccessfull":"Copy to clipboard was successfull.","copyFailed":"Copy to clipboard failed, your browser does not support this function."};
/* ]]> */
</script>
<script type="text/javascript" src="http://localhost/samuelPortfolioProj/wp-content/plugins/copy-delete-posts/assets/js/cdp.min.js?ver=149" id="cdp-js"></script>
<script type="text/javascript" src="http://localhost/samuelPortfolioProj/wp-content/plugins/copy-delete-posts/assets/js/cdp.tooltip.min.js?ver=149" id="cdp-tooltips-js"></script>
<script type="text/javascript" id="cdp-modal-js-extra">
/* <![CDATA[ */
var cdpModalJS = {"strRowCopyIssue":"Please select at least one row to copy.","strRowCopyTryAgain":"Please select at least one row to copy and try again.","strSettCopyIssue":"Please select basic settings for this copy.","strPostCopyIssue":"Something went wrong and we couldn't copy this post \u2013 please try again!","strPostCopyIssueConsoleInfo":"Something went wrong and we couldn't copy this post. \u2013 See dev console for more info.","strRecogBtnIssue":"Couldn't recognize that button, please try again.","strCopyInProgress":"Copy in progress..."};
/* ]]> */
</script>
<script type="text/javascript" src="http://localhost/samuelPortfolioProj/wp-content/plugins/copy-delete-posts/assets/js/cdp-modal.min.js?ver=149" id="cdp-modal-js"></script>
<script type="text/javascript" src="http://localhost/samuelPortfolioProj/wp-content/plugins/copy-delete-posts/assets/js/cdp-user.min.js?ver=149" id="cdp-js-user-js"></script>
<script type="text/javascript" src="http://localhost/samuelPortfolioProj/wp-content/plugins/copy-delete-posts/assets/js/cdp-select.min.js?ver=149" id="cdp-js-select-js"></script>
<script type="text/javascript" src="http://localhost/samuelPortfolioProj/wp-content/themes/samueng/components/collapse/collapse.js?ver=1.0.0" id="collapse-js-js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js" id="highlight-js-js"></script>
<script type="text/javascript" id="highlight-js-js-after">
/* <![CDATA[ */
hljs.highlightAll();
/* ]]> */
</script>
<script type="text/javascript">
/* <![CDATA[ */

		(function() {
			var request, b = document.body, c = 'className', cs = 'customize-support', rcs = new RegExp('(^|\\s+)(no-)?'+cs+'(\\s+|$)');

				request = true;
	
			b[c] = b[c].replace( rcs, ' ' );
			// The customizer requires postMessage and CORS (if the site is cross domain).
			b[c] += ( window.postMessage && request ? ' ' : ' no-' ) + cs;
		}());
	
/* ]]> */
</script>
		<div id="wpadminbar" class="nojq">
							<a class="screen-reader-shortcut" href="#wp-toolbar" tabindex="1">Skip to toolbar</a>
						<div class="quicklinks" id="wp-toolbar" role="navigation" aria-label="Toolbar">
				<ul role="menu" id="wp-admin-bar-root-default" class="ab-top-menu"><li role="group" id="wp-admin-bar-wp-logo" class="menupop"><a class="ab-item" role="menuitem" aria-expanded="false" href="http://localhost/samuelPortfolioProj/wp-admin/about.php"><span class="ab-icon" aria-hidden="true"></span><span class="screen-reader-text">About WordPress</span></a><div class="ab-sub-wrapper"><ul role="menu" aria-label="About WordPress" id="wp-admin-bar-wp-logo-default" class="ab-submenu"><li role="group" id="wp-admin-bar-about"><a class="ab-item" role="menuitem" href="http://localhost/samuelPortfolioProj/wp-admin/about.php">About WordPress</a></li><li role="group" id="wp-admin-bar-contribute"><a class="ab-item" role="menuitem" href="http://localhost/samuelPortfolioProj/wp-admin/contribute.php">Get Involved</a></li></ul><ul role="menu" aria-label="About WordPress" id="wp-admin-bar-wp-logo-external" class="ab-sub-secondary ab-submenu"><li role="group" id="wp-admin-bar-wporg"><a class="ab-item" role="menuitem" href="https://wordpress.org/">WordPress.org</a></li><li role="group" id="wp-admin-bar-documentation"><a class="ab-item" role="menuitem" href="https://wordpress.org/documentation/">Documentation</a></li><li role="group" id="wp-admin-bar-learn"><a class="ab-item" role="menuitem" href="https://learn.wordpress.org/">Learn WordPress</a></li><li role="group" id="wp-admin-bar-support-forums"><a class="ab-item" role="menuitem" href="https://wordpress.org/support/forums/">Support</a></li><li role="group" id="wp-admin-bar-feedback"><a class="ab-item" role="menuitem" href="https://wordpress.org/support/forum/requests-and-feedback">Feedback</a></li></ul></div></li><li role="group" id="wp-admin-bar-site-name" class="menupop"><a class="ab-item" role="menuitem" aria-expanded="false" href="http://localhost/samuelPortfolioProj/wp-admin/">Samuel Nguyen</a><div class="ab-sub-wrapper"><ul role="menu" aria-label="Samuel Nguyen" id="wp-admin-bar-site-name-default" class="ab-submenu"><li role="group" id="wp-admin-bar-dashboard"><a class="ab-item" role="menuitem" href="http://localhost/samuelPortfolioProj/wp-admin/">Dashboard</a></li><li role="group" id="wp-admin-bar-plugins"><a class="ab-item" role="menuitem" href="http://localhost/samuelPortfolioProj/wp-admin/plugins.php">Plugins</a></li></ul><ul role="menu" aria-label="Samuel Nguyen" id="wp-admin-bar-appearance" class="ab-submenu"><li role="group" id="wp-admin-bar-themes"><a class="ab-item" role="menuitem" href="http://localhost/samuelPortfolioProj/wp-admin/themes.php">Themes</a></li><li role="group" id="wp-admin-bar-menus"><a class="ab-item" role="menuitem" href="http://localhost/samuelPortfolioProj/wp-admin/nav-menus.php">Menus</a></li></ul></div></li><li role="group" id="wp-admin-bar-customize" class="hide-if-no-customize"><a class="ab-item" role="menuitem" href="http://localhost/samuelPortfolioProj/wp-admin/customize.php?url=http%3A%2F%2Flocalhost%2FsamuelPortfolioProj%2Fproject%2Fpirate-legends%2F">Customise</a></li><li role="group" id="wp-admin-bar-updates"><a class="ab-item" role="menuitem" href="http://localhost/samuelPortfolioProj/wp-admin/update-core.php"><span class="ab-icon" aria-hidden="true"></span><span class="ab-label" aria-hidden="true">5</span><span class="screen-reader-text updates-available-text">5 updates available</span></a></li><li role="group" id="wp-admin-bar-comments"><a class="ab-item" role="menuitem" href="http://localhost/samuelPortfolioProj/wp-admin/edit-comments.php"><span class="ab-icon" aria-hidden="true"></span><span class="ab-label awaiting-mod pending-count count-0" aria-hidden="true">0</span><span class="screen-reader-text comments-in-moderation-text">0 Comments in moderation</span></a></li><li role="group" id="wp-admin-bar-new-content" class="menupop"><a class="ab-item" role="menuitem" aria-expanded="false" href="http://localhost/samuelPortfolioProj/wp-admin/post-new.php"><span class="ab-icon" aria-hidden="true"></span><span class="ab-label">New</span></a><div class="ab-sub-wrapper"><ul role="menu" aria-label="New" id="wp-admin-bar-new-content-default" class="ab-submenu"><li role="group" id="wp-admin-bar-new-post"><a class="ab-item" role="menuitem" href="http://localhost/samuelPortfolioProj/wp-admin/post-new.php">Post</a></li><li role="group" id="wp-admin-bar-new-media"><a class="ab-item" role="menuitem" href="http://localhost/samuelPortfolioProj/wp-admin/media-new.php">Media</a></li><li role="group" id="wp-admin-bar-new-page"><a class="ab-item" role="menuitem" href="http://localhost/samuelPortfolioProj/wp-admin/post-new.php?post_type=page">Page</a></li><li role="group" id="wp-admin-bar-new-project"><a class="ab-item" role="menuitem" href="http://localhost/samuelPortfolioProj/wp-admin/post-new.php?post_type=project">Project</a></li><li role="group" id="wp-admin-bar-new-user"><a class="ab-item" role="menuitem" href="http://localhost/samuelPortfolioProj/wp-admin/user-new.php">User</a></li></ul></div></li><li role="group" id="wp-admin-bar-cdp-copy-bar-x" class="cdp-admin-bar-copy"><a class="ab-item" role="menuitem" href="#" target="_self"><span class="cdp-admin-bar-icon" data-plug-path="http://localhost/samuelPortfolioProj/wp-content/plugins/copy-delete-posts" data-this-id="261"></span>Copy this</a></li><li role="group" id="wp-admin-bar-edit"><a class="ab-item" role="menuitem" href="http://localhost/samuelPortfolioProj/wp-admin/post.php?post=261&amp;action=edit">Edit Projects</a></li></ul><ul role="menu" id="wp-admin-bar-top-secondary" class="ab-top-secondary ab-top-menu"><li role="group" id="wp-admin-bar-my-account" class="menupop with-avatar"><a class="ab-item" role="menuitem" aria-expanded="false" href="http://localhost/samuelPortfolioProj/wp-admin/profile.php">G'day, <span class="display-name">admin</span><img alt="" src="https://secure.gravatar.com/avatar/218be4b587a1b015d5833949134ab73e?s=26&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/218be4b587a1b015d5833949134ab73e?s=52&amp;d=mm&amp;r=g 2x" class="avatar avatar-26 photo" height="26" width="26" loading="lazy" decoding="async"></a><div class="ab-sub-wrapper"><ul role="menu" aria-label="G'day, admin" id="wp-admin-bar-user-actions" class="ab-submenu"><li role="group" id="wp-admin-bar-user-info"><a class="ab-item" role="menuitem" href="http://localhost/samuelPortfolioProj/wp-admin/profile.php"><img alt="" src="https://secure.gravatar.com/avatar/218be4b587a1b015d5833949134ab73e?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/218be4b587a1b015d5833949134ab73e?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy" decoding="async"><span class="display-name">admin</span><span class="display-name edit-profile">Edit Profile</span></a></li><li role="group" id="wp-admin-bar-logout"><a class="ab-item" role="menuitem" href="http://localhost/samuelPortfolioProj/wp-login.php?action=logout&amp;_wpnonce=4d5cf8d76d">Log Out</a></li></ul></div></li><li role="group" id="wp-admin-bar-search" class="admin-bar-search"><div class="ab-item ab-empty-item" tabindex="-1" role="menuitem"><form action="http://localhost/samuelPortfolioProj/" method="get" id="adminbarsearch"><input class="adminbar-input" name="s" id="adminbar-search" type="text" value="" maxlength="150"><label for="adminbar-search" class="screen-reader-text">Search</label><input type="submit" class="adminbar-button" value="Search"></form></div></li></ul>			</div>
		</div>

		


<div id="cdp-copy-modal-global" class="cdp-modal cdp-copy-modal" style="display:none;">

    <div class="cdp-modal-content" style="padding-bottom: 15px; max-height: 90vh;">

      <div class="cdp-modal-times"></div>

      <div class="cdp-cf cdp-cp-pad" style="margin-top: 50px; padding-top: 0; padding-bottom: 10px;">
        <div class="cdp-left">
            <h2 class="cdp-f-s-16 cdp-f-w-semi-bold" style="margin: 0; line-height: 40px;">Elements to copy:</h2>
        </div>
        <div class="cdp-right" style="width: calc(100% - 200px) !important; text-align: right !important;">
          <div class="cdp-cf cdp-inline" style="line-height: 40px">
              <div class="cdp-left cdp-f-s-16">Use as basis settings</div>
                        <select class="cdp-left cdp-modal-select cdp-ow-border cdp-input-dynamic cdp-modal-input-profiles-r cdp-select cdp-m-l-9-d" name="tooltip-which-profile-second-modal" style="display: none;">
                <option value="custom" disabled="">–– Select ––</option>
                <option value="alloptions">Select all</option>
                <option value="clear">Clean slate</option>
                <optgroup label="–– Profiles ––"></optgroup>
                <option value="custom_named" disabled="">Custom</option>
                                <option value="default">Default</option>
                            </select><div class="cdp-nice-select cdp-left cdp-modal-select cdp-ow-border cdp-input-dynamic cdp-modal-input-profiles-r cdp-select cdp-m-l-9-d" tabindex="0" style="transition: all;"><span class="current">Select all</span><ul class="list" style=""><li data-value="custom" class="option disabled">–– Select ––</li><li data-value="alloptions" class="option selected">Select all</li><li data-value="clear" class="option">Clean slate</li><li data-value="custom_named" class="option disabled">Custom</li><li data-value="default" class="option">Default</li></ul></div>
          </div>
        </div>
      </div>

      <div class="cdp-cp-pad">
        <div class="cdp-modal-checkboxes cdp-checkboxes">
          <label>
            <input class="cdp-modal-option-r cdp-input-dynamic" type="checkbox" name="title">
            <span>Title</span>
          </label>
          <label>
            <input class="cdp-modal-option-r cdp-input-dynamic" type="checkbox" name="date">
            <span>Date</span>
          </label>
          <label>
            <input class="cdp-modal-option-r cdp-input-dynamic" type="checkbox" name="status">
            <span>Status</span>
          </label>
          <label>
            <input class="cdp-modal-option-r cdp-input-dynamic" type="checkbox" name="slug">
            <span>Slug</span>
          </label>
        </div>
        <div class="cdp-modal-checkboxes cdp-checkboxes">
          <label>
            <input class="cdp-modal-option-r cdp-input-dynamic" type="checkbox" name="excerpt">
            <span>Excerpt</span>
          </label>
          <label>
            <input class="cdp-modal-option-r cdp-input-dynamic" type="checkbox" name="content">
            <span>Content</span>
          </label>
          <label>
            <input class="cdp-modal-option-r cdp-input-dynamic" type="checkbox" name="f_image">
            <span>Feat. image</span>
          </label>
          <label>
            <input class="cdp-modal-option-r cdp-input-dynamic" type="checkbox" name="template">
            <span>Template</span>
          </label>
        </div>
        <div class="cdp-modal-checkboxes cdp-checkboxes">
          <label>
            <input class="cdp-modal-option-r cdp-input-dynamic" type="checkbox" name="format">
            <span>Format</span>
          </label>
          <label>
            <input class="cdp-modal-option-r cdp-input-dynamic" type="checkbox" name="author">
            <span>Author</span>
          </label>
          <label>
            <input class="cdp-modal-option-r cdp-input-dynamic" type="checkbox" name="password">
            <span>Password</span>
          </label>
          <label>
            <input class="cdp-modal-option-r cdp-input-dynamic" type="checkbox" name="children">
            <span>Children</span>
          </label>
        </div>
        <div class="cdp-modal-checkboxes cdp-checkboxes">
          <label>
            <input class="cdp-modal-option-r cdp-input-dynamic" type="checkbox" name="comments">
            <span>Comments</span>
          </label>
          <label>
            <input class="cdp-modal-option-r cdp-input-dynamic" type="checkbox" name="menu_order">
            <span>Menu order</span>
          </label>
          <label>
            <input class="cdp-modal-option-r cdp-input-dynamic" type="checkbox" name="attachments">
            <span>Attachments</span>
          </label>
          <label>
            <input class="cdp-modal-option-r cdp-input-dynamic" type="checkbox" name="category">
            <span>Categories</span>
          </label>
        </div>
        <div class="cdp-modal-checkboxes cdp-checkboxes">
          <label>
            <input class="cdp-modal-option-r cdp-input-dynamic" type="checkbox" name="post_tag">
            <span>Tags</span>
          </label>
          <label>
            <input class="cdp-modal-option-r cdp-input-dynamic" type="checkbox" name="cdp_taxonomy">
            <span>Taxonomies</span>
          </label>
          <label>
            <input class="cdp-modal-option-r cdp-input-dynamic" type="checkbox" name="nav_menu">
            <span>Navigation Menus</span>
          </label>
          <label>
            <input class="cdp-modal-option-r cdp-input-dynamic" type="checkbox" name="link_category">
            <span>Link categories</span>
          </label>
        </div>
                  <div class="cdp-modal-checkboxes cdp-checkboxes cdp-modal-checkboxes-three">
            <label class="cdp-relative"><span class="cdp-premium-icon" style="margin-left: 0"></span><b style="padding-left: 21px;" class="cdp-f-s-15 cdp-f-w-medium">Plugin options:</b></label>
            <br>
                                                <label>
              <div class="cdp-inline cdp-tooltip-premium-spc cdp-premium-element">
                <input class="cdp-modal-option-r cdp-input-dynamic" type="checkbox" name="all_metadata" disabled="">
                <span>All post meta</span>
              </div>
            </label>
          </div>
              </div>

      <div class="cdp-modal-copy-times cdp-f-s-15">
        <div class="cdp-modal-copy-times-content">
                    <div class="cdp-cf cdp-inline">
            <div class="cdp-left" style="line-height: 40px;">Copy&nbsp;</div>
            <div class="cdp-left" style="line-height: 40px;">
              <input class="cdp-modal-input-times cdp-input-border" style="border-width: 1px !important;" placeholder="1" type="number" value="1">
            </div>
            <div class="cdp-left" style="line-height: 40px;">
              &nbsp;time(s)            </div>
            <div class="cdp-left" style="line-height: 40px;">&nbsp;to</div>
            <div class="cdp-left">
              <div class="cdp-inline cdp-tooltip-premium-spc-2 cdp-tooltip-premium-spc-3 cdptipstered cdp-premium-element">
                <select class="cdp-input-dynamic cdp-modal-select cdp-modal-select-2 cdp-ow-border cdp-modal-input-site cdp-select cdp-m-l-9-d" name="tooltip-which-site-second-modal" disabled="" style="display: none;">
                  <option value="-1">this site</option>
                                  </select><div class="cdp-nice-select cdp-input-dynamic cdp-modal-select cdp-modal-select-2 cdp-ow-border cdp-modal-input-site cdp-select cdp-m-l-9-d disabled" style="transition: all;"><span class="current">this site</span><ul class="list" style=""><li data-value="-1" class="option selected">this site</li></ul></div>
              </div>
            </div>
          </div>
                  </div>
      </div>

      <div class="cdp-center">
        <span class="cdp-error-span-tooltip">Making more than 50 copies will take some time. – depending on your server.</span>
      </div>

      <div class="cdp-center cdp-p-25-h">
        <button class="cdp-button cdp-copy-modal-button cdp-f-s-15 cdp-f-w-regular" data-cdp-btn="copy-custom" style="height:44px; width:211px;padding:0 20px;line-height: 44px;">Copy it!</button>
              </div>
    </div>

  </div></body></html>